# -----------------------------------------------------------------------------
# JENKINS BUILDOUT FOR PLONE PROJECTS
# -----------------------------------------------------------------------------
# This buildout needs to be extended by overriding the
# jenkins-test-eggs variable. See README.txt for more details.
# -----------------------------------------------------------------------------
[jenkins]
parts =
    zopepy
    instance
    jenkins-test
    jenkins-test-coverage
    coverage

[buildout]
# This value needs to be overridden in the buildout file that extends this
# buildout.
jenkins-test-eggs =
jenkins-test-directories =

[instance]
eggs += ${buildout:jenkins-test-eggs}

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:jenkins-test-eggs}
interpreter = zopepy
scripts = zopepy

# -----------------------------------------------------------------------------
# JENKINS TESTS
# -----------------------------------------------------------------------------
# Creates a "jenkins-test" script in the bin directory of the buildout that
# runs the tests and outputs the results in an XML format that Jenkins can read
# and process.
#
# The output files can be included in Jenkins by enabling the
# "Publish JUnit test result report" setting in the "Post-build Actions"
# section of the Job configuration. The "Test report XMLs" field needs to point
# to "parts/jenkins-test/testreports/*.xml".
# -----------------------------------------------------------------------------
[jenkins-test]
recipe = collective.xmltestreport
eggs = ${buildout:jenkins-test-eggs}
script = jenkins-test
defaults = ['--auto-color', '--auto-progress', '--xml']


# -----------------------------------------------------------------------------
# JENKINS TEST COVERAGE
# -----------------------------------------------------------------------------
# Creates a "jenkins-test-coverage" script in the bin directory of the buildout
# that runs a code coverage analysis and creates a report in an XML format that
# Jenkins can read and process. There is no need to run "bin/jenkins-test"
# before
[jenkins-test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    # Remove old results
    echo "Erase old coverage results."
    bin/coverage erase
    # Collect test coverage results for all packages
    echo "Run test coverage analysis for all packages."
    DIRECTORIES="${buildout:jenkins-test-directories}"
    for pkgdir in $DIRECTORIES
    do
        # Runs a code coverage analysis on top of the "jenkins-test" script for
        # all packages. The data will be collected in a ".coverage" output file
        # in the buildout directory.
        echo "Analyse $pkgdir"
        bin/coverage run -p --source=$pkgdir bin/jenkins-test --all
    done
    echo "Create test coverage report."
    # Combine all package analysis
    bin/coverage combine
    # Generates a "coverage.xml" file that Jenkins can read and process from the
    # ".coverage" file that the coverage report created.
    bin/coverage xml -i -o ${buildout:directory}/parts/jenkins-test/coverage.xml
    echo "Test coverage report finished."
output = ${buildout:directory}/bin/jenkins-test-coverage
mode = 755

[coverage]
recipe = zc.recipe.egg
eggs = coverage
interpreter = ${buildout:directory}/bin/zopepy
